---
  - hosts: all
    become: true
    tasks:
    - name: Check the remote host uptime
      register: uptimeoutput
      command: "uptime"

    - debug:
        var: uptimeoutput.stdout_lines
          
#     - name: Copying jar to remote EC2 container
#       copy:
#         src: ../dwptest/target/dwptest-0.0.1-SNAPSHOT.jar
#         dest: /home/ec2-user
#         owner: ec2-user
#         group: ec2-user
#         mode: 0644
          
    - name: Update all packages
      yum: 
        name: '*'
        state: latest
        update_only: yes
          
    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras
        
    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Install docker-ce (centos) via amazon-linux-extras packages
      shell: "amazon-linux-extras install docker=18.06.1 -y"

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes
        

  - hosts: all
    become_user: ec2-user
    tasks:
#     - name: Ensure Python pip packages are installed
#       pip:
#         name: "{{ packages }}"
#       vars:
#         packages:
#         - bottle
       
    - name: install certain python modules for docker
      pip:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        state: forcereinstall
      with_items:
      - { name: docker, version: 4.4.4 }
#       - { name: docker-py, version: 1.10.0 }
        
        
  - hosts: all
    become: true
    tasks:   
      - name: Pull Nginx Docker image
        docker_image:
          name: nginx
          pull: yes
        
      - name: Create Nginx container
        docker_container:
          name: nginx-cont
          image: nginx
          command: sleep 1d
          state: present
          published_ports: 8080:80
          
  
